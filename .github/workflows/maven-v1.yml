# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ "1.5" ]
  pull_request:
    branches: [ "1.5" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ 8 ]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Java
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java }}
        server-id: sonatype-nexus-snapshots
        server-username: MAVEN_USERNAME
        server-password: MAVEN_PASSWORD
    - name: Cache local Maven repository
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Build with Maven and Gradle
      run: |
        ./mvnw -B -Dhttps.protocols=TLSv1.2 verify --file pom.xml
        export MY_POM_VERSION=`./mvnw -q -Dexec.executable="echo" -Dexec.args='${projects.version}' --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec`
        echo "POM VERSION" ${MY_POM_VERSION}
        if [[ $MY_POM_VERSION =~ ^.*SNAPSHOT$ ]];
        then
            ./mvnw -B clean install # TODO this must be ./mvnw -B -Dhttps.protocols=TLSv1.2 clean deploy in real !!!!!!!!!!!!
        else
            echo "not deploying release: " ${MY_POM_VERSION}
        fi
      env:
        MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
